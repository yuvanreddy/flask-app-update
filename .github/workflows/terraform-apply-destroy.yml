name: Terraform Apply/Destroy

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform (apply or destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
    secrets:
      AWS_ROLE_TO_ASSUME:
        required: true

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: flask-eks

permissions:
  contents: read
  id-token: write

jobs:
  terraform:
    name: Terraform ${{ github.event.inputs.action || 'plan' }}
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: github-actions-terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: terraform-eks
        run: |
          terraform init -input=false

      - name: Terraform Validate
        working-directory: terraform-eks
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: terraform-eks
        run: |
          terraform plan -input=false -out=tfplan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure' && github.event.inputs.action != 'destroy'
        run: exit 1

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply' && github.event_name == 'workflow_dispatch'
        working-directory: terraform-eks
        run: |
          terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy' && github.event_name == 'workflow_dispatch'
        working-directory: terraform-eks
        run: |
          terraform destroy -auto-approve
